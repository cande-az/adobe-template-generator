{"ast":null,"code":"import templateGenerator from \"../generator\";\nconst data = {\n  selectOption: {\n    name: \"Display name on list\",\n    value: \"the name of this file\",\n    image: \"\",\n    description: \"\"\n  },\n  options: [{\n    displayName: \"Imagen\",\n    option: \"image\",\n    isEditable: true,\n    isRequired: true\n  }, {\n    displayName: \"Titulo\",\n    option: \"title\",\n    isEditable: true,\n    isRequired: true\n  }, {\n    displayName: \"Orden\",\n    option: \"orden\",\n    isEditable: true,\n    isRequired: true\n  }],\n  formTemplate: null,\n  // Component that use the options list to render form information\n  templateGenerator: templateDataList => {\n    const finalTemplate = `\n    <div\n        class=\"o-steps-slider u-ov-h\"\n        cols=\"1/1\"\n        mart=\"24 32@sm\"\n        data-mbox=\"web-halcon-product-descrip-f9-3\"\n        data-lazy-component=\"steps-slider:css-js\"\n      >\n        <div class=\"o-steps-slider__content\" cols=\"1/1\">\n          <div class=\"o-steps-slider__content--slider\" flex=\"jc:ce@sm fd:r@md\">\n          ${forHTMLRender({\n      list: templateDataList,\n      options: options,\n      html: `<a class=\"a-step-circle-button {{active-replace}}\" flex=\"ai:ce jc:ce\" data-step=\"{{orden-replace}}\">\n            <div class=\"a-step-circle-button__element\" flex=\"ai:ce jc:ce\">\n              <span class=\"a-step-circle-button__label\">{{orden-replace}}</span>\n            </div>\n          </a>`\n    })}\n            {{#each items}}\n            \n            {{/each}}\n          </div>\n        </div>\n      </div>\n    `;\n    return finalTemplate;\n  }\n};\nconst demo = new templateGenerator(data);\nexport default demo;","map":{"version":3,"names":["templateGenerator","data","selectOption","name","value","image","description","options","displayName","option","isEditable","isRequired","formTemplate","templateDataList","finalTemplate","forHTMLRender","list","html","demo"],"sources":["/Users/candeaznarez/Documents/Programacion/Repositorios/adobe-template-generator/src/templates/instances/stepByStepTwo.tsx"],"sourcesContent":["import { IsTemplateGenerator } from \"../../interfaces\";\nimport templateGenerator from \"../generator\";\n\nconst data: IsTemplateGenerator = {\n  selectOption: {\n    name: \"Display name on list\",\n    value: \"the name of this file\",\n    image: \"\",\n    description: \"\",\n  },\n  options: [\n    {\n      displayName: \"Imagen\",\n      option: \"image\",\n      isEditable: true,\n      isRequired: true,\n    },\n    {\n      displayName: \"Titulo\",\n      option: \"title\",\n      isEditable: true,\n      isRequired: true,\n    },\n    {\n      displayName: \"Orden\",\n      option: \"orden\",\n      isEditable: true,\n      isRequired: true,\n    },\n    \n  ],\n  formTemplate: null, // Component that use the options list to render form information\n  templateGenerator: (templateDataList: Record<string, string>[]) => {\n    const finalTemplate = `\n    <div\n        class=\"o-steps-slider u-ov-h\"\n        cols=\"1/1\"\n        mart=\"24 32@sm\"\n        data-mbox=\"web-halcon-product-descrip-f9-3\"\n        data-lazy-component=\"steps-slider:css-js\"\n      >\n        <div class=\"o-steps-slider__content\" cols=\"1/1\">\n          <div class=\"o-steps-slider__content--slider\" flex=\"jc:ce@sm fd:r@md\">\n          ${forHTMLRender({\n            list: templateDataList,\n            options: options,\n            html: `<a class=\"a-step-circle-button {{active-replace}}\" flex=\"ai:ce jc:ce\" data-step=\"{{orden-replace}}\">\n            <div class=\"a-step-circle-button__element\" flex=\"ai:ce jc:ce\">\n              <span class=\"a-step-circle-button__label\">{{orden-replace}}</span>\n            </div>\n          </a>`,\n          })}\n            {{#each items}}\n            \n            {{/each}}\n          </div>\n        </div>\n      </div>\n    `;\n    return finalTemplate;\n  },\n};\nconst demo = new templateGenerator(data);\n\nexport default demo;\n"],"mappings":"AACA,OAAOA,iBAAP,MAA8B,cAA9B;AAEA,MAAMC,IAAyB,GAAG;EAChCC,YAAY,EAAE;IACZC,IAAI,EAAE,sBADM;IAEZC,KAAK,EAAE,uBAFK;IAGZC,KAAK,EAAE,EAHK;IAIZC,WAAW,EAAE;EAJD,CADkB;EAOhCC,OAAO,EAAE,CACP;IACEC,WAAW,EAAE,QADf;IAEEC,MAAM,EAAE,OAFV;IAGEC,UAAU,EAAE,IAHd;IAIEC,UAAU,EAAE;EAJd,CADO,EAOP;IACEH,WAAW,EAAE,QADf;IAEEC,MAAM,EAAE,OAFV;IAGEC,UAAU,EAAE,IAHd;IAIEC,UAAU,EAAE;EAJd,CAPO,EAaP;IACEH,WAAW,EAAE,OADf;IAEEC,MAAM,EAAE,OAFV;IAGEC,UAAU,EAAE,IAHd;IAIEC,UAAU,EAAE;EAJd,CAbO,CAPuB;EA4BhCC,YAAY,EAAE,IA5BkB;EA4BZ;EACpBZ,iBAAiB,EAAGa,gBAAD,IAAgD;IACjE,MAAMC,aAAa,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYC,aAAa,CAAC;MACdC,IAAI,EAAEH,gBADQ;MAEdN,OAAO,EAAEA,OAFK;MAGdU,IAAI,EAAG;AACnB;AACA;AACA;AACA;IAP0B,CAAD,CAQZ;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAzBI;IA0BA,OAAOH,aAAP;EACD;AAzD+B,CAAlC;AA2DA,MAAMI,IAAI,GAAG,IAAIlB,iBAAJ,CAAsBC,IAAtB,CAAb;AAEA,eAAeiB,IAAf"},"metadata":{},"sourceType":"module"}