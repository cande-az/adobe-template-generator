{"ast":null,"code":"var forHTMLRender=function forHTMLRender(props){var list=props.list,html=props.html,options=props.options;var finalHTML=\"\";console.log(list);list.forEach(function(item){var newFragment=html;options.forEach(function(key){if(item[key]){newFragment=newFragment.replaceAll(\"{{\".concat(key,\"-replace}}\"),item[key]);}else{newFragment=newFragment.replaceAll(\"{{\".concat(key,\"-replace}}\"),\"\");}});finalHTML=finalHTML+newFragment;});return finalHTML;};export default forHTMLRender;","map":{"version":3,"names":["forHTMLRender","props","list","html","options","finalHTML","console","log","forEach","item","newFragment","key","replaceAll"],"sources":["/Users/candeaznarez/Documents/Programacion/Repositorios/adobe-template-generator/src/utils/forHTMLRender.ts"],"sourcesContent":["const forHTMLRender = (props: {\n  list: any[];\n  html: string;\n  options: any | undefined[];\n}) => {\n  const { list, html, options } = props;\n  let finalHTML = \"\";\n  console.log(list)\n  list.forEach((item) => {\n    let newFragment = html;\n    options.forEach((key: string | number) => {\n      if (item[key]) {\n        newFragment = newFragment.replaceAll(`{{${key}-replace}}`, item[key]);\n      } else {\n        newFragment = newFragment.replaceAll(`{{${key}-replace}}`, \"\");\n      }\n    });\n    finalHTML = finalHTML + newFragment;\n  });\n  return finalHTML;\n};\n\nexport default forHTMLRender;\n"],"mappings":"AAAA,GAAMA,cAAa,CAAG,QAAhBA,cAAgB,CAACC,KAAD,CAIhB,CACJ,GAAQC,KAAR,CAAgCD,KAAhC,CAAQC,IAAR,CAAcC,IAAd,CAAgCF,KAAhC,CAAcE,IAAd,CAAoBC,OAApB,CAAgCH,KAAhC,CAAoBG,OAApB,CACA,GAAIC,UAAS,CAAG,EAAhB,CACAC,OAAO,CAACC,GAAR,CAAYL,IAAZ,EACAA,IAAI,CAACM,OAAL,CAAa,SAACC,IAAD,CAAU,CACrB,GAAIC,YAAW,CAAGP,IAAlB,CACAC,OAAO,CAACI,OAAR,CAAgB,SAACG,GAAD,CAA0B,CACxC,GAAIF,IAAI,CAACE,GAAD,CAAR,CAAe,CACbD,WAAW,CAAGA,WAAW,CAACE,UAAZ,aAA4BD,GAA5B,eAA6CF,IAAI,CAACE,GAAD,CAAjD,CAAd,CACD,CAFD,IAEO,CACLD,WAAW,CAAGA,WAAW,CAACE,UAAZ,aAA4BD,GAA5B,eAA6C,EAA7C,CAAd,CACD,CACF,CAND,EAOAN,SAAS,CAAGA,SAAS,CAAGK,WAAxB,CACD,CAVD,EAWA,MAAOL,UAAP,CACD,CApBD,CAsBA,cAAeL,cAAf"},"metadata":{},"sourceType":"module"}