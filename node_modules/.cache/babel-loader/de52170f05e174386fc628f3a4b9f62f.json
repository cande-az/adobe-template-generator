{"ast":null,"code":"const forHTMLRender = props => {\n  const {\n    list,\n    html,\n    options\n  } = props;\n  let finalHTML = \"\";\n  console.log(list);\n  list.forEach(item => {\n    let newFragment = html;\n    options.forEach(key => {\n      if (item[key]) {\n        newFragment = newFragment.replaceAll(`{{${key}-replace}}`, item[key]);\n      } else {\n        newFragment = newFragment.replaceAll(`{{${key}-replace}}`, \"\");\n      }\n    });\n    finalHTML = finalHTML + newFragment;\n  });\n  return finalHTML;\n};\n\nexport default forHTMLRender;","map":{"version":3,"names":["forHTMLRender","props","list","html","options","finalHTML","console","log","forEach","item","newFragment","key","replaceAll"],"sources":["/Users/candeaznarez/Documents/Programacion/Repositorios/adobe-template-generator/src/utils/forHTMLRender.ts"],"sourcesContent":["const forHTMLRender = (props: {\n  list: any[];\n  html: string;\n  options: any | undefined[];\n}) => {\n  const { list, html, options } = props;\n  let finalHTML = \"\";\n  console.log(list)\n  list.forEach((item) => {\n    let newFragment = html;\n    options.forEach((key: string | number) => {\n      if (item[key]) {\n        newFragment = newFragment.replaceAll(`{{${key}-replace}}`, item[key]);\n      } else {\n        newFragment = newFragment.replaceAll(`{{${key}-replace}}`, \"\");\n      }\n    });\n    finalHTML = finalHTML + newFragment;\n  });\n  return finalHTML;\n};\n\nexport default forHTMLRender;\n"],"mappings":"AAAA,MAAMA,aAAa,GAAIC,KAAD,IAIhB;EACJ,MAAM;IAAEC,IAAF;IAAQC,IAAR;IAAcC;EAAd,IAA0BH,KAAhC;EACA,IAAII,SAAS,GAAG,EAAhB;EACAC,OAAO,CAACC,GAAR,CAAYL,IAAZ;EACAA,IAAI,CAACM,OAAL,CAAcC,IAAD,IAAU;IACrB,IAAIC,WAAW,GAAGP,IAAlB;IACAC,OAAO,CAACI,OAAR,CAAiBG,GAAD,IAA0B;MACxC,IAAIF,IAAI,CAACE,GAAD,CAAR,EAAe;QACbD,WAAW,GAAGA,WAAW,CAACE,UAAZ,CAAwB,KAAID,GAAI,YAAhC,EAA6CF,IAAI,CAACE,GAAD,CAAjD,CAAd;MACD,CAFD,MAEO;QACLD,WAAW,GAAGA,WAAW,CAACE,UAAZ,CAAwB,KAAID,GAAI,YAAhC,EAA6C,EAA7C,CAAd;MACD;IACF,CAND;IAOAN,SAAS,GAAGA,SAAS,GAAGK,WAAxB;EACD,CAVD;EAWA,OAAOL,SAAP;AACD,CApBD;;AAsBA,eAAeL,aAAf"},"metadata":{},"sourceType":"module"}